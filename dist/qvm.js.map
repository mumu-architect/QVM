{"version":3,"file":"qvm.js","mappings":"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","sources":["webpack://Qvm/webpack/universalModuleDefinition","webpack://Qvm/./src/expression.js","webpack://Qvm/webpack/bootstrap","webpack://Qvm/webpack/runtime/define property getters","webpack://Qvm/webpack/runtime/hasOwnProperty shorthand","webpack://Qvm/webpack/runtime/make namespace object","webpack://Qvm/./src/common.js","webpack://Qvm/./src/parser.js","webpack://Qvm/../../src/native-browser.ts","webpack://Qvm/../../src/rng-browser.ts","webpack://Qvm/../../src/stringify.ts","webpack://Qvm/../../src/v4.ts","webpack://Qvm/./src/event.js","webpack://Qvm/./src/vnode.js","webpack://Qvm/./src/velement.js","webpack://Qvm/./src/vtext.js","webpack://Qvm/./src/vdom.js","webpack://Qvm/./src/proxy.js","webpack://Qvm/./src/directives.js","webpack://Qvm/./src/qvm.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Qvm\"] = factory();\n\telse\n\t\troot[\"Qvm\"] = factory();\n})(self, () => {\nreturn ","import { assert } from \"./common\";\r\n\r\n//全局关键字\r\nconst keyword = {\r\n  new: true,\r\n  class: true,\r\n  for: true,\r\n  if: true,\r\n  else: true,\r\n};\r\n\r\n/**\r\n * 解析表达式，调用数据\r\n * //str=>\"a\"\r\n * //str=>\"a+b\"\r\n * //str=>\"json.name+'b'\"\r\n * //str=>\"fn(a+b)\"\r\n * @param {*} str\r\n * @param {*} data\r\n */\r\nexport function expr(str, data) {\r\n  //TODO:filters未开发\r\n  // assert(filters);\r\n  // let strArr=str.split('|');\r\n  // str = strArr[0];\r\n\r\n\r\n  /**\r\n   * 判断是否全局变量\r\n   * @param {*} s\r\n   * @param {*} localExpr\r\n   * @returns\r\n   */\r\n  function parseGlobal(s, localExpr) {\r\n    // alert('alert' in window);\r\n    // alert(typeof window.alert === 'function');\r\n    let arr = s.split(\" \");\r\n    if (s in window || (keyword[arr[0]] && !data[s])) {\r\n      return s;\r\n    } else {\r\n      return localExpr;\r\n    }\r\n  }\r\n\r\n  let arr = preseExpr(str);\r\n  //console.log(arr);\r\n  let arr2 = arr.map((item) => {\r\n    if (typeof item == \"string\") {\r\n      return \"'\" + item + \"'\";\r\n    } else {\r\n      let str = item.expr.replace(/.?[\\$_a-z][\\sa-z0-9_\\$]*/gi, function (s) {\r\n        //console.log(s);\r\n        if (/[\\$_a-z]/i.test(s[0])) {\r\n          return parseGlobal(s, \"data.\" + s);\r\n        } else {\r\n          if (s[0] == \".\") {\r\n            return s;\r\n          } else {\r\n            return s[0] + parseGlobal(s.substring(1), \"data.\" + s.substring(1));\r\n          }\r\n        }\r\n      });\r\n      return str;\r\n    }\r\n  });\r\n\r\n  let str2 = arr2.join(\"\");\r\n  //console.log(str2);\r\n\r\n  let result =  eval(str2);\r\n\r\n  // //过滤\r\n  //  strArr.slice(1).forEach(name=>{\r\n  //   result=filters[name](result);\r\n  //  });\r\n\r\n   return result\r\n\r\n\r\n}\r\n\r\nexport function compileStringTemplate(str, data) {\r\n\r\n  //assert(filters);\r\n  \r\n  let s = 0;\r\n  //{{xxx}}\r\n  let arr = [];\r\n  let n = 0;\r\n  while ((n = str.indexOf(\"{{\", s)) != -1) {\r\n    arr.push(str.substring(s, n));\r\n    let m = 2;\r\n    let e;\r\n    for (let i = n + 2; i < str.length; i++) {\r\n      if (str[i] == \"{\") {\r\n        m++;\r\n      } else if (str[i] == \"}\") {\r\n        m--;\r\n      }\r\n\r\n      if (m == 0) {\r\n        e=i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(m>0){\r\n      throw new Error('{{}} does not match');\r\n    }\r\n\r\n    let strExpr=str.substring(n+2,e-1);\r\n    let result = expr(strExpr,data);\r\n    if(typeof result =='object'){\r\n      arr.push(JSON.stringify(result));\r\n    }else{\r\n      arr.push(result);\r\n    }\r\n   \r\n    s=e+1;\r\n  }\r\n\r\n  arr.push(str.substring(s));\r\n\r\n  return arr.join('');\r\n\r\n}\r\n\r\n/**\r\n * 解析表达式\r\n * 区分字符串和表达式\r\n * @param {*} str str=\"12+'abc'+fn(a+b)+name-age+'www'+'dfa\\\\'sd'+88\";\r\n * @returns\r\n */\r\nfunction preseExpr(str) {\r\n  let arr = [];\r\n  while (1) {\r\n    let n = str.search(/'|\"/);\r\n    if (n == -1) {\r\n      arr.push({ expr: str });\r\n      break;\r\n    }\r\n\r\n    let m = n + 1;\r\n    while (1) {\r\n      m = str.indexOf(str[n], m);\r\n      if (m == -1) {\r\n        throw new Error(\"The quotation marks are not paired\");\r\n      }\r\n\r\n      if (str[m - 1] == \"\\\\\") {\r\n        m++;\r\n        continue;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    arr.push({ expr: str.substring(0, n) });\r\n    arr.push(str.substring(n + 1, m));\r\n    str = str.substring(m + 1);\r\n  }\r\n\r\n  return arr;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * 错误提示\r\n * @param {*} exp\r\n * @param {*} msg\r\n */\r\nexport function assert(exp, msg = \"assert faild\") {\r\n  if (!exp) {\r\n    throw new Error(msg);\r\n  }\r\n}\r\n\r\n/**\r\n * 获取dom元素或节点元素\r\n * @param {*} arg\r\n * @returns\r\n */\r\nexport function dom(arg) {\r\n\r\n  if (typeof arg == \"string\") {\r\n    let res = document.querySelector(arg);\r\n\r\n\r\n    return res;\r\n  } else if (arg instanceof Node) {\r\n    return arg;\r\n  } else {\r\n\r\n  }\r\n}\r\n","import { assert } from \"./common\";\r\n\r\n/**\r\n * 解析dom\r\n * @param {*} dom\r\n * @returns\r\n */\r\nexport function parseDOM(dom) {\r\n\r\n\r\n\r\n  if (dom.nodeType == dom.ELEMENT_NODE) {\r\n    //1.type--标签\r\n    let tag = dom.tagName.toLowerCase();\r\n\r\n    //2.属性\r\n    let attrs = {};\r\n    Array.from(dom.attributes).forEach((attr) => {\r\n      attrs[attr.name] = attr.value;\r\n    });\r\n    //3.children\r\n    let children = Array.from(dom.childNodes)\r\n      .map((child) => parseDOM(child))\r\n      .filter((child) => child !== undefined);\r\n\r\n    //判断是否是html\r\n    let ishtml =\r\n      dom.constructor !== HTMLUnknownElement && dom.constructor !== HTMLElement;\r\n    return {\r\n      type: \"element\",\r\n      el: dom,\r\n      tag,\r\n      attrs,\r\n      children,\r\n      ishtml,\r\n      _blue: true,\r\n    };\r\n  } else if (dom.nodeType == document.TEXT_NODE) {\r\n    let str = dom.data.trim();\r\n    if (str) {\r\n      return {\r\n        type: \"text\",\r\n        el: dom,\r\n        data: str,\r\n        _blue: true,\r\n      };\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 解析指令\r\n * @param {*} attrs\r\n * @returns\r\n */\r\nexport function parseDirectives(attrs) {\r\n\r\n\r\n  let directives = [];\r\n  //v-\r\n  //: v-bind:xxx\r\n  //@ v-on:xxx\r\n  for (let key in attrs) {\r\n    let directive;\r\n    //v-if=\"xxx\" v-bind:title=\"xxx\" v-show=\"xxx\" @xx:xxx\r\n    if (key.startsWith(\"v-\")) {\r\n      //名字：参数\r\n      let [name, arg] = key.split(\":\");\r\n      directive = { name: name.replace(/^v\\-/, \"\"), arg };\r\n      //:title\r\n    } else if (key.startsWith(\":\")) {\r\n      directive = { name: \"bind\", arg: key.substring(1) };\r\n      //@xx:xxx\r\n    } else if (key.startsWith(\"@\")) {\r\n      directive = { name: \"on\", arg: key.substring(1) };\r\n    }\r\n\r\n    if (directive) {\r\n\r\n\r\n      /*\r\n      v-model = \"a\"\r\n      {name:'model',arg:undefined,value=>attrs[key]}\r\n      :value=\"a\" +@input=\"value=\"a=value$event.target.value\"\r\n      @input=\"value=$event.target\"\r\n      */\r\n\r\n      if (directive.name == \"model\") {\r\n        directives.push({\r\n          name: \"on\",\r\n          arg: \"input\",\r\n          value: `${attrs[key]}=$event.target.value`,\r\n          meta: {},\r\n        });\r\n        directives.push({\r\n          name: \"bind\",\r\n          arg: \"value\",\r\n          value: attrs[key],\r\n          meta: {},\r\n        });\r\n      } else {\r\n        directive.meta = {};\r\n        directive.value = attrs[key];\r\n        directives.push(directive);\r\n      }\r\n    }\r\n  }\r\n  return directives;\r\n}\r\n\r\n/**\r\n * 解析事件on\r\n * @param {*} directives\r\n */\r\nexport function parseListeners(directives) {\r\n\r\n\r\n  return directives.filter((directive) => directive.name == \"on\");\r\n}\r\n",null,null,null,null,"\r\n/**\r\n * 事件触发器，事件队列\r\n */\r\nexport default class EventQueue{\r\n    constructor(){\r\n        this.events = {};\r\n    }\r\n   \r\n    $on(name,fn){\r\n        this.events[name]=this.events[name]||[];\r\n        this.events[name].push(fn);\r\n    }\r\n\r\n    $emit(name,...args){\r\n        if(this.events[name]){\r\n            this.events[name].forEach(fn=>{\r\n                fn.call(this,...args);\r\n            });\r\n        }\r\n    }\r\n}","import { assert } from \"./common\";\r\nimport { v4 as uuid} from \"uuid\";\r\nimport EventQueue from \"./event\";\r\n\r\n/**\r\n * 虚拟节点元素类\r\n */\r\nexport default class VNode extends EventQueue {\r\n  constructor(el, parent) {\r\n    super();\r\n\r\n\r\n\r\n    //标记初始化\r\n    this.state = '';\r\n\r\n    this._el = el;\r\n    this.$parent = parent;\r\n\r\n    //区分每个组件，那个数据变动，渲染那个组件\r\n    this.name = uuid();\r\n  }\r\n\r\n  //克隆VNode\r\n  clone(){\r\n    return new VNode(this._el.cloneNode(true),this._component);\r\n  }\r\n\r\n  render() {\r\n    throw new Error(\"render method not defined\");\r\n  }\r\n}\r\n","import { assert } from \"./common\";\r\nimport VNode from \"./vnode\";\r\nimport { parseDirectives, parseDOM, parseListeners } from \"./parser\";\r\nimport { createVDom } from \"./vdom\";\r\n\r\n/**\r\n * 虚拟元素类\r\n */\r\nexport default class VElement extends VNode {\r\n  constructor(options, parent) {\r\n\r\n\r\n\r\n\r\n\r\n\r\n    super(options.el, parent);\r\n\r\n    this.type = options.tag;\r\n    this.$attrs = options.attrs;\r\n    this.$directives = parseDirectives(options.attrs);\r\n    this.$listeners = parseListeners(this.$directives);\r\n    this.$options = options;\r\n\r\n    //\r\n    // this._data = createProxy({},component._data,()=>{\r\n    //   this.render();\r\n    // });\r\n\r\n    this._data = {};\r\n    let _this = this;\r\n    this._proxy = new Proxy(this._data, {\r\n      get(data, name) {\r\n        return _this._get(name);\r\n      },\r\n      set(data, name, val) {\r\n        _this.$root._data[name] = val;\r\n        return true;\r\n      },\r\n    });\r\n  }\r\n\r\n  _get(name) {\r\n    let cur = this;\r\n    while (cur) {\r\n      if (cur._data[name] !== undefined) {\r\n        return cur._data[name];\r\n      }\r\n      cur = cur.$parent;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  _set(name, val) {\r\n    this._data[name] = val;\r\n  }\r\n\r\n  render() {\r\n    //只渲染自己--指令\r\n    this._directive(\"update\");\r\n    //渲染子集\r\n    this.$children.forEach((child) => {\r\n      child.render();\r\n    });\r\n    //标记初始化\r\n    this.state = \"update\";\r\n\r\n    // console.log('[velement rendered]',this.name);\r\n  }\r\n\r\n  _directive(type) {\r\n    //优先执行,执行指令，渲染--指令\r\n    doDirectives.call(this, this.$directives);\r\n\r\n    //执行指令，渲染--指令\r\n    function doDirectives(arr) {\r\n      arr.forEach((directive) => {\r\n        let directiveObj = this.$root._directives[directive.name];\r\n\r\n        let dirFn = directiveObj[type];\r\n        if (dirFn) {\r\n\r\n          dirFn(this, directive);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 克隆\r\n   * @returns\r\n   */\r\n  clone() {\r\n    let element = parseDOM(this._el.cloneNode(true));\r\n    delete element.attrs[\"v-for\"];\r\n    let tree = createVDom(element, this.$parent, this.$root);\r\n    //console.log(tree);\r\n    return tree;\r\n  }\r\n\r\n  //初始化所有element\r\n  init() {\r\n    //只渲染--指令\r\n    this._directive(\"init\");\r\n    //标记初始化\r\n    this.state = \"init\";\r\n    if (this.$children) {\r\n      this.$children.forEach((child) => {\r\n        if (child instanceof VElement) {\r\n          child.init();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { assert } from \"./common\";\r\nimport { compileStringTemplate } from \"./expression\";\r\nimport VNode from \"./vnode\";\r\n\r\n/**\r\n * 虚拟文本类\r\n */\r\nexport default class VText extends VNode {\r\n  constructor(options, parent) {\r\n\r\n\r\n\r\n\r\n    super(options.el, parent);\r\n\r\n    //\r\n    this._template = options.data;\r\n    //console.log(options.data);\r\n\r\n    //标记初始化\r\n    this.state='init';\r\n\r\n    //前一次渲染的结果\r\n    this._last_str = undefined;\r\n  }\r\n\r\n  render() {\r\n    let str = compileStringTemplate(this._template,this.$parent._proxy);\r\n   // console.log(str);\r\n\r\n   if(this._last_str !=str){\r\n    this._el.data=str;\r\n    //标记初始化\r\n    this.state = \"update\";\r\n    console.log('[vtext rendered]',this.name);\r\n\r\n    this._last_str = str;\r\n   }\r\n\r\n\r\n  }\r\n}\r\n","import VElement from \"./velement\";\r\nimport VText from \"./vtext\";\r\nimport { assert } from \"./common\";\r\n\r\n/**\r\n * 创建虚拟dom\r\n * @param {*} node\r\n * @param {*} component\r\n * @returns\r\n */\r\nexport function createVDom(node, parent, component) {\r\n\r\n\r\n\r\n\r\n  if (node.type == \"element\") {\r\n    if (node.ishtml) {\r\n      //VElement\r\n      let ele = new VElement(node, parent);\r\n      ele.$children = node.children.map((child) => {\r\n        return createVDom(child, ele, component);\r\n      });\r\n\r\n      ele.$root = component;\r\n\r\n      return ele;\r\n    } else {\r\n      // //VComponent\r\n      // let cmp = new VComponent(node, parent);\r\n      // cmp.$children = node.children.map(child =>{\r\n      //   return createVDom(child,cmp,cmp);\r\n      // });\r\n      // //cmp.$root=cmp;\r\n      // return cmp;\r\n\r\n      return node;\r\n    }\r\n  } else {\r\n    //VText\r\n    return new VText(node, parent);\r\n  }\r\n}\r\n","import { assert } from \"./common\";\r\n\r\n/**\r\n * 创建Proxy\r\n * @param {*} data\r\n * @param {*} cb\r\n * @returns\r\n */\r\nexport function createProxy(data,staticData, cb,path=[]) {\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //递归回调\r\n  let res;\r\n  if (data instanceof Array) {\r\n    res = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (typeof data[i] == \"object\") {\r\n        res[i] = createProxy(data[i],staticData,cb,[...path,i]);\r\n      } else {\r\n        res[i] = data[i];\r\n      }\r\n    }\r\n  } else {\r\n    res = {};\r\n    for (let key in data) {\r\n\r\n\r\n      if (typeof data[key] == \"object\") {\r\n        res[key] = createProxy(data[key],staticData,cb,[...path,key]);\r\n      } else {\r\n        res[key] = data[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return new Proxy(res, {\r\n    get(data, name) {\r\n      if(staticData && staticData[name]){\r\n        return staticData[name];\r\n      }else{\r\n        return data[name];\r\n      }\r\n\r\n    },\r\n    set(data, name, val) {\r\n      if(typeof val=='object'){\r\n        data[name] =createProxy(val,staticData,cb);\r\n      }else{\r\n        data[name] = val;\r\n      }\r\n     \r\n      cb([...path,name]);\r\n      return true;\r\n    },\r\n  });\r\n}\r\n","import { assert } from \"./common\";\r\nimport { expr } from \"./expression\";\r\nimport VElement from \"./velement\";\r\n\r\n/**\r\n * 指令\r\n */\r\nexport default {\r\n  //{name:\"bind\",arg:\"title\",value:\"a+b\"}\r\n  bind: {\r\n    init(velement, directive) {\r\n      directive.meta._last_data = \"\";\r\n    },\r\n    update(velement, directive) {\r\n\r\n\r\n\r\n\r\n\r\n\r\n      let res = expr(directive.value, velement._proxy);\r\n      //console.log(directive.arg,res);\r\n\r\n      if (directive.meta._last_data != res) {\r\n        velement._el.setAttribute(directive.arg, res);\r\n        velement._el[directive.arg] = res;\r\n\r\n        directive.meta._last_data = res;\r\n\r\n        console.log(\"[velement rendered]\", velement.name);\r\n      }\r\n    },\r\n    destory: null,\r\n  },\r\n  //{name:\"on\",arg:'click',value:\"fn\"}\r\n  on: {\r\n    init(velement, directive) {\r\n      //value=>'fn'->fn()\r\n      //value=>'fn()' //'fn(a,b)'\r\n      //value=>'a+b' //'sum(a,b)+fn(9)'\r\n\r\n\r\n\r\n\r\n\r\n\r\n      //TOTD\r\n      velement._el.addEventListener(\r\n        directive.arg,\r\n        function (ev) {\r\n          let str = directive.value;\r\n          if (/^[\\$_a-z][a-z0-9_\\$]*$/i.test(str)) {\r\n            str += \"($event)\";\r\n          }\r\n          //velement._component._data.addObj('$event',ev);\r\n          velement._set('$event',ev);\r\n          expr(str, velement._proxy);\r\n        },\r\n        false\r\n      );\r\n    },\r\n    update: null,\r\n    destory() {},\r\n  },\r\n  //屏蔽页面执行数据转换，数据转化完统一展示\r\n  cloak: {\r\n    init: null,\r\n    update(velement) {\r\n      velement._el.removeAttribute(\"v-cloak\");\r\n    },\r\n    destory: null,\r\n  },\r\n  //{name:\"show\",arg:undefined,value:\"show\"}\r\n  show: {\r\n    init: null,\r\n    update(velement, directive) {\r\n\r\n\r\n\r\n\r\n\r\n      let res = expr(directive.value, velement._data);\r\n      if (res) {\r\n        velement._el.style.display = \"\";\r\n      } else {\r\n        velement._el.style.display = \"none\";\r\n      }\r\n    },\r\n    destory: null,\r\n  },\r\n  if: {\r\n    init(velement, directive) {\r\n      let holder = document.createComment(\"qvm holder\");\r\n      velement.__parent = velement._el.parentNode;\r\n      velement.__holder = holder;\r\n      velement.__el = velement._el;\r\n    },\r\n    update(velement, directive) {\r\n      let res = expr(directive.value, velement._data);\r\n\r\n      if (res) {\r\n        if (velement.__holder.parentNode) {\r\n          velement.__parent.replaceChild(velement.__el, velement.__holder);\r\n        }\r\n      } else {\r\n        velement.__parent.replaceChild(velement.__holder, velement.__el);\r\n      }\r\n    },\r\n    destory(velement, directive) {},\r\n  },\r\n  \"else-if\": {\r\n    init(velement, directive) {},\r\n    update(velement, directive) {},\r\n    destory(velement, directive) {},\r\n  },\r\n  else: {\r\n    init(velement, directive) {},\r\n    update(velement, directive) {},\r\n    destory(velement, directive) {},\r\n  },\r\n  for: {\r\n    init(velement, directive) {\r\n      //删除等于directive的指令v-for\r\n      velement.$directives.filter((item) => item != directive);\r\n\r\n      directive.meta = {};\r\n      let template = (directive.meta.template = velement);\r\n      let parentNode = (directive.meta.parent = velement._el.parentNode);\r\n\r\n      let holder = (directive.meta.holder =\r\n        document.createComment(\"for holder\"));\r\n      parentNode.replaceChild(holder, template._el);\r\n\r\n      //存储克隆模板\r\n      directive.meta.elements = [];\r\n\r\n      //上一次的数据\r\n      let last = [];\r\n\r\n      //\r\n      velement.render = function () {\r\n        const template = directive.meta.template;\r\n        const parentNode = directive.meta.parent;\r\n        const holder = directive.meta.holder;\r\n        //存储克隆模板\r\n        let elements = directive.meta.elements;\r\n\r\n        //删除\r\n        //1.数据没变--原始velement直接拿过来\r\n        //2.数据删了--原始velement留着备用\r\n        //3.数据添加--优先使用备用velement，创建新的\r\n        let oldElements = [...elements];\r\n        elements.forEach((element) => {\r\n          parentNode.removeChild(element._el);\r\n        });\r\n        elements.length = 0;\r\n\r\n        //\r\n        let newElements = [];\r\n\r\n        let { key, value, data } = parseFor(directive.value);\r\n\r\n        last = [...last];\r\n\r\n        //console.log(\"last:\", last);\r\n\r\n        let iter = expr(data, velement._proxy);\r\n\r\n        //diff\r\n        newElements.length = iter.length;\r\n\r\n        for (let i = 0; i < iter.length; i++) {\r\n          let item = iter[i];\r\n          let index = i;\r\n          let n = last.findIndex(i=>i==item);\r\n          if (n != -1) {\r\n            newElements[index] = oldElements[n];\r\n            oldElements.splice(n, 1);\r\n            last.splice(n, 1);\r\n          } else {\r\n            newElements[index] = null;\r\n          }\r\n        }\r\n\r\n        newElements.forEach((item, index) => {\r\n          if (item != null) {\r\n            return;\r\n          }\r\n          if (oldElements.length > 0) {\r\n            newElements[index] = oldElements.pop();\r\n          } else {\r\n            newElements[index] = template.clone();\r\n            newElements[index].init();\r\n          }\r\n        });\r\n\r\n        last = iter;\r\n        //存储克隆模板\r\n        elements = newElements;\r\n\r\n        let fragment = document.createDocumentFragment();\r\n        newElements.forEach((element, index) => {\r\n          key && element._set(key, index);\r\n          element._set(value, iter[index]);\r\n\r\n          fragment.appendChild(element._el);\r\n        });\r\n        parentNode.insertBefore(fragment,holder);\r\n\r\n        elements.forEach((velement) => {\r\n          //console.log(velement);\r\n          //velement.$root.forceUpdate();\r\n          velement.render();\r\n        });\r\n\r\n        directive.meta.elements = elements;\r\n      };\r\n    },\r\n    update(velement, directive) {},\r\n    destory(velement, directive) {},\r\n  },\r\n  //{name:\"html\",arg:undefined,value:\"show\"}\r\n  html: {\r\n    init: null,\r\n    update(velement, directive) {\r\n\r\n\r\n\r\n\r\n\r\n      let res = expr(directive.value, velement._data);\r\n      velement._el.innerHTML = res;\r\n    },\r\n    destory: null,\r\n  },\r\n  //{name:\"text\",arg:undefined,value:\"show\"}\r\n  text: {\r\n    init: null,\r\n    update(velement, directive) {\r\n\r\n\r\n\r\n\r\n\r\n      let res = expr(directive.value, velement._data);\r\n      let node = document.createTextNode(res);\r\n      velement._el.innerHTML = \"\";\r\n      velement._el.appendChild(node);\r\n    },\r\n    destory: null,\r\n  },\r\n};\r\n\r\n/**\r\n * 解析for-in\r\n * @param {*} str\r\n * @returns\r\n */\r\nfunction parseFor(str) {\r\n  //str=>'xxx in arr'\r\n  //str=>'xxx,xx in xx'\r\n\r\n  let arr = str.split(\" in \");\r\n  let [value, key] = arr[0].split(\",\");\r\n\r\n  return {\r\n    key,\r\n    value,\r\n    data: arr[1],\r\n  };\r\n}\r\n","import { assert, dom } from \"./common\";\r\nimport { parseDOM } from \"./parser\";\r\nimport { createVDom } from \"./vdom\";\r\nimport { createProxy } from \"./proxy\";\r\nimport directives from \"./directives\";\r\nimport VElement from \"./velement\";\r\nimport { Store } from \"./qvmx\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport EventQueue from \"./event\";\r\n\r\nexport default class Qvm extends EventQueue {\r\n  constructor(options) {\r\n    super();\r\n    //存储多个watch\r\n    this.__watch_target = [];\r\n    this.$options = options;\r\n\r\n    //定义$refs\r\n    this.$refs = {};\r\n\r\n    this.name = uuid();\r\n\r\n    this.components = options.components || {};\r\n\r\n    //store连接\r\n    if (options.store) {\r\n\r\n      this.$store = options.store;\r\n      options.store._qvm = options.store._qvm || this;\r\n    }\r\n\r\n    //创建数据代理\r\n    this._staticData = {\r\n      ...options.methods,\r\n      __Qvm: this,\r\n      //store连接到模板\r\n      $store: options.store,\r\n      $emit: this.$emit.bind(this),\r\n      $on: this.$on.bind(this),\r\n      $refs: this.$refs,\r\n    };\r\n\r\n    //判断组件data为function\r\n    let __data;\r\n    if (typeof options.data == \"function\") {\r\n      __data = options.data();\r\n    } else {\r\n      __data = options.data;\r\n    }\r\n\r\n    this._data = createProxy(__data || {}, this._staticData, (path) => {\r\n      //watch\r\n      for (let i = 0; i < path.length; i++) {\r\n        let str = path.slice(0, i + 1).join(\".\");\r\n        let watch = this._watchs[str];\r\n        if (watch) {\r\n          //存储watch\r\n          this.__watch_target.push(watch);\r\n        }\r\n      }\r\n\r\n      //执行computed方法\r\n      this._doCompute();\r\n\r\n      //通知渲染\r\n      this.forceUpdate();\r\n    });\r\n\r\n    //执行computed方法\r\n    this._doCompute();\r\n\r\n    //存储watch\r\n    this._watchs = options.watch || {};\r\n\r\n    //系统指令加扩展指令\r\n    this._directives = { ...directives, ...options.directives };\r\n    //获取dom\r\n    let el;\r\n    if (typeof options.el == \"string\") {\r\n      el = dom(options.el);\r\n    } else {\r\n      el = options.el;\r\n    }\r\n\r\n    //创建component组件\r\n    let vdomTree = this.createComponent(el, this);\r\n\r\n    //存储created，updated初始换方法\r\n    this.created = options.created;\r\n    this.updated = options.updated;\r\n    this.mounted = options.mounted;\r\n\r\n    this.root = vdomTree;\r\n\r\n    //router\r\n    if (options.router) {\r\n      let router = options.router;\r\n      router._qvm = this;\r\n      //初始化\r\n      router.init();\r\n      this.$router = router;\r\n    }\r\n\r\n    //初始化所有element\r\n    this.root.init();\r\n\r\n    //标记初始化\r\n    this.state = \"init\";\r\n    //调用created初始化方法\r\n    this.created && this.created.call(this._data);\r\n\r\n    //标识render合并执行一次\r\n    this._render_timer = 0;\r\n    //初始渲染--update\r\n    this.render();\r\n\r\n    //生命周期，组件已经被成功渲染过了\r\n    this.mounted && this.mounted.call(this._data);\r\n\r\n    return this._data;\r\n  }\r\n\r\n  init() {\r\n    console.log(\"init\");\r\n  }\r\n\r\n  //执行computed方法\r\n  _doCompute() {\r\n    const options = this.$options;\r\n    for (let key in options.computed) {\r\n      let fn = options.computed[key];\r\n      let result = fn.call(this._data);\r\n      this._staticData[key] = result;\r\n    }\r\n  }\r\n\r\n  //提醒执行render()\r\n  forceUpdate() {\r\n    clearTimeout(this._render_timer);\r\n    this._render_timer = setTimeout(() => {\r\n      this.render();\r\n    }, 0);\r\n  }\r\n\r\n  render() {\r\n    //渲染自己\r\n    this.root.render();\r\n\r\n    //执行watch\r\n    this.__watch_target.forEach((fn) => {\r\n      fn.call(this._data);\r\n    });\r\n    //清空watch\r\n    this.__watch_target.length = 0;\r\n\r\n    this.state = \"update\";\r\n    //调用updated初始化方法\r\n    this.updated && this.updated.call(this._data);\r\n  }\r\n\r\n  /**\r\n   * 创建组件component\r\n   * @param {*} el\r\n   * @param {*} qvm\r\n   * @returns\r\n   */\r\n  createComponent(el, qvm) {\r\n    //解析dom\r\n    let domTree = parseDOM(el);\r\n    //查找ref\r\n    function findRef(node) {\r\n      if (!node.attrs) {\r\n        return;\r\n      }\r\n      if (node.attrs.ref) {\r\n        node.ref = node.attrs.ref;\r\n      }\r\n\r\n      node.children.forEach((child) => {\r\n        findRef(child);\r\n      });\r\n    }\r\n    findRef(domTree);\r\n    //创建虚拟dom\r\n    let vdomTree = createVDom(domTree, this, this);\r\n\r\n    //查找dom中的component\r\n    let findAndCreateComponent = (node, parent) => {\r\n      if (node._blue) {\r\n        //拼接外部组件component\r\n        let component;\r\n        if (node.tag != \"component\") {\r\n          component = qvm.components[node.tag] || components[node.tag];\r\n\r\n        } else {\r\n\r\n          component = qvm.components[node.attrs.is] || componets[node.attrs.is];\r\n\r\n        }\r\n\r\n\r\n        let oDiv = document.createElement(\"div\");\r\n        oDiv.innerHTML = component.template;\r\n\r\n\r\n        //slot位置标记\r\n        let slots = oDiv.getElementsByTagName(\"slot\");\r\n        Array.from(slots).forEach((slot) => {\r\n          let fragment = document.createDocumentFragment();\r\n          node.children.forEach((child) => {\r\n            fragment.appendChild(child.el.cloneNode(true));\r\n          });\r\n          slot.parentNode.replaceChild(fragment, slot);\r\n        });\r\n\r\n        let root = oDiv.children[0];\r\n        node.el.parentNode.replaceChild(root, node.el);\r\n\r\n        let cmp = new Qvm({\r\n          el: root,\r\n          ...component,\r\n          store: qvm.$store,\r\n        }).__Qvm;\r\n\r\n        cmp.$root = cmp;\r\n        //获取ref，执行ref\r\n        if (node.ref) {\r\n          qvm.$refs[node.ref] = cmp;\r\n        }\r\n\r\n        //TOTD:props未测试\r\n        component.props &&\r\n          component.props.forEach((name) => {\r\n            cmp._data[name] = node.attrs[name];\r\n          });\r\n\r\n        return cmp;\r\n\r\n        //return this._createComponent(component);\r\n      } else {\r\n        if (node instanceof VElement) {\r\n          for (let i = 0; i < node.$children.length; i++) {\r\n            node.$children[i] = findAndCreateComponent(node.$children[i], node);\r\n          }\r\n        }\r\n        return node;\r\n      }\r\n    };\r\n    //查找dom中的component\r\n    vdomTree = findAndCreateComponent(vdomTree, this);\r\n    return vdomTree;\r\n  }\r\n}\r\n\r\n//外部调用组件\r\nlet components = {};\r\nQvm.component = function (name, options) {\r\n  components[name] = options;\r\n};\r\n//寻找组件\r\n// Qvm.findComponent=function(name){\r\n//   return components[name];\r\n// }\r\n\r\n\r\nexport { Qvm } "],"names":["root","factory","exports","module","define","amd","self","keyword","new","class","for","if","else","expr","str","data","parseGlobal","s","localExpr","arr","split","window","preseExpr","arr2","map","item","replace","test","substring","str2","join","result","eval","compileStringTemplate","n","indexOf","push","m","e","i","length","Error","_typeof","JSON","stringify","search","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","assert","exp","arguments","dom","arg","document","querySelector","Node","parseDOM","nodeType","ELEMENT_NODE","tag","tagName","toLowerCase","attrs","Array","from","attributes","forEach","attr","name","children","childNodes","child","filter","ishtml","constructor","HTMLUnknownElement","HTMLElement","type","el","_blue","TEXT_NODE","trim","parseDirectives","directives","directive","startsWith","_key$split2","_slicedToArray","concat","meta","parseListeners","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","byteToHex","toString","slice","unsafeStringify","offset","uuid","validate","TypeError","v4","options","buf","native","rnds","random","EventQueue","_createClass","_classCallCheck","this","events","fn","_this","_len","args","_key","apply","VNode","_EventQueue","parent","_callSuper","state","_el","$parent","_inherits","cloneNode","_component","VElement","_VNode","_this2","$attrs","$directives","$listeners","$options","_data","_proxy","Proxy","_get","set","val","$root","cur","_directive","$children","render","_this3","dirFn","_directives","element","createVDom","init","VText","_template","_last_str","console","log","node","component","ele","createProxy","staticData","cb","res","path","_toConsumableArray","velement","_last_data","update","setAttribute","destory","on","addEventListener","ev","_set","cloak","removeAttribute","show","style","display","holder","createComment","__parent","parentNode","__holder","__el","replaceChild","template","elements","last","oldElements","removeChild","newElements","_parseFor","parseFor","iter","_loop","index","findIndex","splice","pop","clone","fragment","createDocumentFragment","appendChild","insertBefore","html","innerHTML","text","createTextNode","_arr$0$split2","Qvm","__data","__watch_target","$refs","components","store","$store","_qvm","_staticData","_objectSpread","methods","__Qvm","$emit","$on","watch","_watchs","_doCompute","forceUpdate","vdomTree","createComponent","created","updated","mounted","router","$router","_render_timer","_possibleConstructorReturn","computed","clearTimeout","setTimeout","qvm","domTree","findRef","ref","findAndCreateComponent","is","componets","oDiv","createElement","slots","getElementsByTagName","slot","cmp","props"],"sourceRoot":""}